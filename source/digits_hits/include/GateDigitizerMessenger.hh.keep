/*----------------------
   Copyright (C): OpenGATE Collaboration

This software is distributed under the terms
of the GNU Lesser General  Public Licence (LGPL)
See LICENSE.md for further details
----------------------*/


#ifndef GateDigitizerMessenger_h
#define GateDigitizerMessenger_h 1

#include "GateDigitizer.hh"

#include "G4UImessenger.hh"
#include "globals.hh"
//#include "GateClockDependentMessenger.hh"
#include "GateListMessenger.hh"

class G4UIdirectory;
class G4UIcmdWithAString;
class G4UIcmdWithAnInteger;
class G4UIcmdWithADoubleAndUnit;
class G4UIcmdWith3Vector;
class G4UIcmdWith3VectorAndUnit;
class G4UIcmdWithoutParameter;
class G4UIcmdWithABool;
class G4UIcmdWithADouble;

//public GateClockDependentMessenger

//class GateClockDependent;


class GateDigitizerMessenger: public GateListMessenger
{
public:
  GateDigitizerMessenger(GateDigitizer*);
  ~GateDigitizerMessenger();

  void SetNewValue(G4UIcommand*, G4String);

  G4bool CheckNameConflict(const G4String& name);

   private:
     //! Dumps the list of modules that the user can insert into the chain
     virtual const G4String& DumpMap();

     //! Lists all the system-names onto the standard output
       virtual void ListChoices()
         { G4cout << "The available choices are: " << DumpMap() << "\n"; }

     //! Inserts a new module into the pulse-processor chain
     virtual void DoInsertion(const G4String& typeName);

     //! Get the chain list
     inline GateDigitizer* GetDigitizer()
       { return (GateDigitizer*) GetClockDependent(); }

private:
  GateDigitizer* m_digitizer;

 /* G4UIdirectory           *Dir;//_default_singles;
  G4UIdirectory           *Dir_user_singles;

  G4UIcmdWithAString*         SetModuleNameCmd;
*/
  G4UIcmdWithAString*         SetInputNameCmd;        //!< The UI command "set input name"
  G4UIcmdWithAString*         DefineNameCmd;	      //!< the UI command 'name'
      G4UIcmdWithoutParameter*    ListChoicesCmd;       //!< the UI command 'info'
      G4UIcmdWithoutParameter*    ListCmd;	      //!< the UI command 'list'
      G4UIcmdWithAString*         pInsertCmd;	      //!< the UI command 'insert'

};

#endif
